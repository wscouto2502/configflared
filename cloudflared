#!/bin/bash

menu_principal() {
    while true; do
        clear

        echo "O que deseja fazer?

        [00]: Configurar IP Fixo
        [01]: Configurar Tunnel CloudFlared
        [02]: Configuração inicial do IP
        [xx]: Sair do instalador"

        read -p "Digite sua opção: " opcao1

        case $opcao1 in
            0|00)
                serve_local_ip_fixo
                ;;
            1|01)
                tunnel_cloudflared
                ;;
            2|02)
                serve_local_ip_fixo_retorno
                ;;
            sair|fechar|exit|close|x|xx|XX|X)
                clear
                echo "Obrigado por utilizar!"
                break
                ;;
            *)
                echo "Opção inválida. Pressione Enter para continuar..."
                read
                ;;
        esac
        echo ""
    done
}

serve_local_ip_fixo() {
    clear
    while true; do
        echo "Lista das placas de rede disponíveis:"
        ip link show | awk -F': ' '/^[0-9]+: / && !/veth[0-9a-f]+@/ && !/docker0/ && !/docker_gwbridge/ && !/lo/ {print $2}'
        echo ""

        read -p "Digite o nome da placa de rede (ex: enp0s3): " interface
        read -p "Digite o endereço IP com a máscara (ex: 192.168.0.10/24): " ip_address
        read -p "Digite o gateway, IP do roteador (ex: 192.168.0.1): " gateway
        echo "Digite o(s) servidor(es) DNS separados por espaço (ex: 1.1.1.1 8.8.8.8):"
        read -a dns_servers

        clear
        echo -e "\e[33mNome da placa de rede:\e[97m $interface\e[0m"
        echo -e "\e[33mIP da máquina:\e[97m $ip_address\e[0m"
        echo -e "\e[33mGateway:\e[97m $gateway\e[0m"
        echo -e "\e[33mDNS:\e[97m ${dns_servers[*]}\e[0m"
        echo ""

        read -p "As respostas estão corretas? (Y/N): " confirmacao
        if [[ "$confirmacao" =~ ^[Yy]$ ]]; then
            break
        else
            clear
        fi
    done

    echo "Gerando arquivo de configuração..."
    config=$(cat <<EOF
network:
  version: 2
  ethernets:
    $interface:
      dhcp4: no
      addresses:
        - $ip_address
      routes:
        - to: default
          via: $gateway
      nameservers:
        addresses:
$(for dns in "${dns_servers[@]}"; do echo "          - $dns"; done)
EOF
)

    echo "$config" | sudo tee /etc/netplan/01-installer-config.yaml > /dev/null

    sudo chmod 644 /etc/netplan/01-installer-config.yaml

    echo ""
    echo ""
    echo ""
    echo ""
    echo -e "\nAplicando configurações..."
    echo -e "\nseu novo IP: $ip_address"
    echo -e "\nCaso esteja utilizando acesso remoto reconecte com o servidor com o novo IP!"
    sudo netplan apply

}

tunnel_cloudflared() {
    echo "Função de Tunnel CloudFlared ainda não implementada."
    read -p "Pressione Enter para voltar ao menu..."
}

serve_local_ip_fixo_retorno() {
        sudo rm -rf /etc/netplan/01-installer-config.yaml
        
        echo -e "\nLista de ip(s) da maquina:"
        echo ""

        ip -o -4 addr show | awk '!/ lo / && !/docker/ && !/veth/ {split($4, a, "/"); print a[1]}'


        echo -e "\nCaso esteja utilizando acesso remoto reconecte com o servidor com o novo IP!"
        sudo netplan apply

    read -p "Pressione Enter para voltar ao menu..."
    menu_principal
}

# Iniciar o script
menu_principal
